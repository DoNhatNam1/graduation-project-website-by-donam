
services:
  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 127.0.0.1:5432:5432
    expose:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  nextjs_c:
    container_name: nextjs_c
    image: donhatnamdocker/nextjs_img:v2.0
    depends_on:
      db:
        condition: service_healthy
    build:
      context: ./
      dockerfile: ./Dockerfile
    restart: unless-stopped
    volumes:
      - postgres-data:/app/postgres-data
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DOCKER_POSTGRES_PRISMA_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?schema=public
    command: /bin/sh -c "start.sh"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
volumes:
  postgres-data:
    name: ${VOLUME_NAME}