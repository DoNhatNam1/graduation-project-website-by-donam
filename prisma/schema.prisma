generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // provider = "mysql"

  // url = env("POSTGRES_PRISMA_URL")
  url = env("DOCKER_POSTGRES_PRISMA_URL")
  // url = env("MYSQL_PRISMA_URL")

  // directUrl = env("POSTGRES_URL_NON_POOLING")
}



// dotenv -e .env.local -- bunx prisma db push

model TbAdmin {
  id           String        @id @default(uuid())
  password     String        @db.VarChar(255)
  name         String        @db.VarChar(30)
  phone_number Float         @unique
  address      String?       @db.VarChar(50)
  urlhost      String        @unique @db.VarChar(255)
  email        String?
  image        String        @db.Text
  role         Account_Roles @default(Admin)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@index([email, password], name: "index_validation_admin_login_email_password")
  @@index([id], type: Hash, name: "index_get_Adminid")
}

model TbAgencyAccount {
  id           String         @id @default(uuid())
  password     String         @db.VarChar(255)
  name         String?        @db.VarChar(30)
  phone_number Float          @unique
  address      String?        @db.VarChar(50)
  role         Account_Roles  @default(Agency)
  urlhost      String         @unique @db.VarChar(255)
  email        String         
  image        String?        @db.Text
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  SubAccount   TbSubAccount[]

  @@index([email, password], name: "index_validation_agency_login_email_password")
  @@index([id], type: Hash, name: "index_get_Agencyid")
  @@index([phone_number], type: Hash, name: "index_validation_agency_signup_phone_number")
  @@index([urlhost], type: Hash, name: "index_validation_agency_signup_urlhost")
}

model TbSubAccount {
  id            String          @id @default(uuid())
  AgencyId      String
  password      String          @db.VarChar(255)
  phone_number  Float           @unique
  address       String?         @db.VarChar(50)
  name          String?         @db.VarChar(30)
  urlhost      String           @db.VarChar(255)
  email         String?         
  image         String?         @db.Text
  role          Account_Roles   @default(SubAccount)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  AgencyAccount TbAgencyAccount @relation(fields: [AgencyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "subaccount_agencyid_foreign_key_idx")

  @@index([email, password], name: "index_validation_login_subaccount_email_password")
  @@index([id], type: Hash, name: "index_get_SubAccountId")
  @@index([AgencyId], map: "rfc_AgencyId")
}

enum Account_Roles {
  Admin
  Agency
  SubAccount
}
